import pandas as pd
import numpy as np
import tensorflow as tf
import pickle
from sklearn.preprocessing import MinMaxScaler

# Load dataset
data = pd.read_csv("dataset/historical_weather.csv")

# Select relevant features
X = data[['temperature', 'humidity', 'pressure', 'wind_speed']]
y = data[['temp_next_day', 'humidity_next_day']]

# Normalize data
scaler = MinMaxScaler()
X_scaled = scaler.fit_transform(X)

# Save scaler
pickle.dump(scaler, open("models/scaler.pkl", "wb"))

# Build LSTM Model
model = tf.keras.Sequential([
    tf.keras.layers.LSTM(50, return_sequences=True, input_shape=(X_scaled.shape[1], 1)),
    tf.keras.layers.LSTM(50, return_sequences=False),
    tf.keras.layers.Dense(2)
])

model.compile(optimizer='adam', loss='mse')
model.fit(X_scaled, y, epochs=50, batch_size=16)

# Save model
model.save("models/weather_model.h5")
